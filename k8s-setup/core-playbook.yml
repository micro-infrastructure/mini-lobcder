---
- hosts: all
  become: true
  tasks:
  - name: Install packages to deploy core pods
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - git
  
  - name: Create vault file
    local_action: shell ./genVault.sh
    become: false

  - name: Copy vault file
    copy:
        src: ./vault.yaml
        dest: /home/vagrant/vault.yaml
  
  - name: Setup core-process ns
    become: false
    command: kubectl create ns process-core
  
  - name: Install vault
    become: false
    command: kubectl apply -f /home/vagrant/vault.yaml

  - name: Pull core-infra
    become: false
    git:
      repo: https://github.com/micro-infrastructure/core-infra.git
      version: 0.2.3
      dest: /home/vagrant/core-infra
      force: true

  - name: Remove nodeSelector from core-infra yaml for local - 1
    become: false
    lineinfile:
        path: /home/vagrant/core-infra/core-infra.yaml
        regexp: 'nodeSelector:'
        line: ''
  
  - name: Remove nodeSelector from core-infra yaml for local - 2
    become: false
    lineinfile:
        path: /home/vagrant/core-infra/core-infra.yaml
        regexp: 'type\: core'
        line: ''
  
  - name: Change host in core-infra yaml for local
    become: false
    replace:
        path: /home/vagrant/core-infra/core-infra.yaml
        regexp: 'lobcder.process-project.eu'
        replace: '192.168.50.10'

  - name: Pull core-mongo
    git:
      repo: https://github.com/micro-infrastructure/core-mongo.git
      version: 0.1.0
      dest: /home/vagrant/core-mongo

  - name: Deploy core-mongo
    become: False
    command: kubectl create -f /home/vagrant/core-mongo/core-mongo-no-pv-mini.yaml

  - name: Wait for mongo up
    become: False
    command: kubectl wait -n process-core --for=condition=Ready pod/core-mongo --timeout=360s

  - name: Deploy core-infra
    become: False
    command: kubectl create -f /home/vagrant/core-infra/core-infra.yaml

  - name: Get core-infra pod name
    become: false
    shell: kubectl get pods -n process-core | grep core-infra | awk '{print $1}'
    register: core_infra
  
  - name: Wait for core-infra up
    become: False
    command: kubectl wait -n process-core --for=condition=Ready pod/{{ core_infra.stdout }} --timeout=3600s

  - name: Wait a bit more...
    become: False
    command: sleep 30

  - name: Retrieve adminToken
    become: False
    command: kubectl cp -c web -n process-core {{ core_infra.stdout }}:/app/adminToken adminToken
  
  - name: Copy adminToken file to local file
    fetch:
        src: /home/vagrant/adminToken
        dest: adminToken
        flat: yes
  
  - name: Save adminToken
    become: False
    command: cat ./adminToken
    register: token

  - name: Setup default user
    uri:
        url: "http://localhost:30000/api/v1/user"
        method: PUT
        return_content: yes 
        headers:
            Content-Type: "application/json"
            x-access-token: "{{ token.stdout }}"
        body: '{"email": "user@process-project.eu","namespace": "user","staticPorts": {"scp": 31001,"webdav":31002,"jupyter":31003, "lofar-stage": 31004, "lofar-download": 31005}}'
        body_format: json
        status_code: 200
    register: user

  - name: Save infra user token locally
    become: false
    local_action: copy content={{ user.json.token }} dest=./userInfraToken

  - name: Read user-infra.json
    become: False
    local_action: command cat user-infra.json
    register: infra

  - name: Convert user-infra to json
    set_fact:
        userinfra: "{{ infra.stdout | from_json }}"

  - debug:
      var: userinfra

  - name: Deploy user micro-infrastructure
    uri:
        url: "http://localhost:30000/api/v1/infrastructure"
        method: POST
        return_content: yes 
        headers:
            Content-Type: "application/json"
            x-access-token: "{{ user.json.token }}"
        body: "{{ userinfra }}"
        body_format: json
        status_code: 200
    register: infraresult

  - debug:
      var: infraresult

  - name: Wait a bit...
    command: sleep 30
  
  - name: Get micro-infrastrucuture info
    uri:
        url: "http://localhost:30000/api/v1/infrastructure"
        method: GET
        return_content: yes 
        headers:
            Content-Type: "application/json"
            x-access-token: "{{ user.json.token }}"
        body: "{}"
        body_format: json
        status_code: 200
    register: services

  - debug:
      var: services
  
  - name: Save service user token locally
    become: false
    local_action: copy content={{ services }} dest=./userServiceToken
  
  - name: Get user-infra pod name
    become: false
    shell: kubectl get pods -n user | grep user-microinfra | grep -v Terminating |  awk '{print $1}'
    register: user_infra_name
    until: "user_infra_name.stdout != ''"
    retries: 10
    delay: 5

  - debug:
      var: user_infra_name.stdout

  - name: Wait for core-infra up
    become: False
    command: kubectl wait -n user --for=condition=Ready pod/{{ user_infra_name.stdout }} --timeout=3600s

  - debug:
      msg:
        - "Jupyter is located at http://192.168.50.10:31003 default password: thesame."
        - "Webdav is located at http://192.168.50.10:31002 default user: process, password: thesame."
        - "SCP service is located at http://192.168.50.10:31001 x-access-token in userServiceToken"
        - "Further documentation visit: https://github.com/micro-infrastructure/documentation"

